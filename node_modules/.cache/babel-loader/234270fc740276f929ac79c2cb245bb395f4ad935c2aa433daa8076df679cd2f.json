{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\emman\\\\OneDrive\\\\Documents\\\\reacttsx\\\\React-TS-login-using-jwt\\\\src\\\\context\\\\RegisterContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\n\n// Define el contexto y su tipo\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegisterContext = /*#__PURE__*/createContext(undefined);\nexport const RegisterProvider = ({\n  children\n}) => {\n  _s();\n  const [registerComponente, setRegisterComponente] = useState(false);\n  return /*#__PURE__*/_jsxDEV(RegisterContext.Provider, {\n    value: {\n      registerComponente,\n      setRegisterComponente\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n\n// Hook personalizado para usar el contexto\n_s(RegisterProvider, \"JK1O30MYkFhsFh0pq6OLBTyYg0w=\");\n_c = RegisterProvider;\nexport const useRegisterContext = () => {\n  _s2();\n  const context = useContext(RegisterContext);\n  if (!context) {\n    throw new Error('useRegisterContext must be used within a RegisterProvider');\n  }\n  return context;\n};\n_s2(useRegisterContext, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"RegisterProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","RegisterContext","undefined","RegisterProvider","children","_s","registerComponente","setRegisterComponente","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useRegisterContext","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/emman/OneDrive/Documents/reacttsx/React-TS-login-using-jwt/src/context/RegisterContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, FC } from 'react';\r\n\r\n// Define el contexto y su tipo\r\ninterface RegisterContextProps {\r\n  registerComponente: boolean;\r\n  setRegisterComponente: (state: boolean) => void;\r\n}\r\n\r\nconst RegisterContext = createContext<RegisterContextProps | undefined>(undefined);\r\n\r\n\r\nexport const RegisterProvider: FC = ({ children }) => {\r\n  const [registerComponente, setRegisterComponente] = useState(false);\r\n\r\n  return (\r\n    <RegisterContext.Provider value={{ registerComponente, setRegisterComponente }}>\r\n      {children}\r\n    </RegisterContext.Provider>\r\n  );\r\n};\r\n\r\n// Hook personalizado para usar el contexto\r\nexport const useRegisterContext = () => {\r\n  const context = useContext(RegisterContext);\r\n  if (!context) {\r\n    throw new Error('useRegisterContext must be used within a RegisterProvider');\r\n  }\r\n  return context;\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAY,OAAO;;AAEtE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAMA,MAAMC,eAAe,gBAAGL,aAAa,CAAmCM,SAAS,CAAC;AAGlF,OAAO,MAAMC,gBAAoB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACpD,MAAM,CAACC,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAEnE,oBACEE,OAAA,CAACC,eAAe,CAACO,QAAQ;IAACC,KAAK,EAAE;MAAEH,kBAAkB;MAAEC;IAAsB,CAAE;IAAAH,QAAA,EAC5EA;EAAQ;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACe,CAAC;AAE/B,CAAC;;AAED;AAAAR,EAAA,CAVaF,gBAAoB;AAAAW,EAAA,GAApBX,gBAAoB;AAWjC,OAAO,MAAMY,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,GAAA;EACtC,MAAMC,OAAO,GAAGpB,UAAU,CAACI,eAAe,CAAC;EAC3C,IAAI,CAACgB,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,2DAA2D,CAAC;EAC9E;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,kBAAkB;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}