{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\emman\\\\OneDrive\\\\Documents\\\\reacttsx\\\\React-TS-login-using-jwt\\\\src\\\\context\\\\RegisterContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ModalContext = /*#__PURE__*/createContext(undefined);\nexport const useModalContext = () => {\n  _s();\n  const context = useContext(ModalContext);\n  if (!context) {\n    throw new Error(\"useModalContext must be used within a ModalProvider\");\n  }\n  return context;\n};\n_s(useModalContext, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const ModalProvider = ({\n  children\n}) => {\n  _s2();\n  const [showSingUp, setShowSingUp] = useState(false);\n  const openSingUp = () => setShowSingUp(true);\n  const closeSingUp = () => setShowSingUp(false);\n  return /*#__PURE__*/_jsxDEV(ModalContext.Provider, {\n    value: {\n      showSingUp,\n      openSingUp,\n      closeSingUp\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s2(ModalProvider, \"SnleyBLBK2R7K9YG2ohNPUFf9jk=\");\n_c = ModalProvider;\nvar _c;\n$RefreshReg$(_c, \"ModalProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","ModalContext","undefined","useModalContext","_s","context","Error","ModalProvider","children","_s2","showSingUp","setShowSingUp","openSingUp","closeSingUp","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/emman/OneDrive/Documents/reacttsx/React-TS-login-using-jwt/src/context/RegisterContext.tsx"],"sourcesContent":["\r\nimport React, { createContext, useContext, useState, ReactNode } from \"react\";\r\n\r\ntype ModalContextType = {\r\n  showSingUp: boolean;\r\n  openSingUp: () => void;\r\n  closeSingUp: () => void;\r\n};\r\n\r\nconst ModalContext = createContext<ModalContextType | undefined>(undefined);\r\n\r\nexport const useModalContext = () => {\r\n  const context = useContext(ModalContext);\r\n  if (!context) {\r\n    throw new Error(\"useModalContext must be used within a ModalProvider\");\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const ModalProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\r\n  const [showSingUp, setShowSingUp] = useState(false);\r\n\r\n  const openSingUp = () => setShowSingUp(true);\r\n  const closeSingUp = () => setShowSingUp(false);\r\n\r\n  return (\r\n    <ModalContext.Provider value={{ showSingUp, openSingUp, closeSingUp }}>\r\n      {children}\r\n    </ModalContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAmB,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQ9E,MAAMC,YAAY,gBAAGL,aAAa,CAA+BM,SAAS,CAAC;AAE3E,OAAO,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnC,MAAMC,OAAO,GAAGR,UAAU,CAACI,YAAY,CAAC;EACxC,IAAI,CAACI,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,qDAAqD,CAAC;EACxE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,eAAe;AAQ5B,OAAO,MAAMI,aAAgD,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAChF,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMc,UAAU,GAAGA,CAAA,KAAMD,aAAa,CAAC,IAAI,CAAC;EAC5C,MAAME,WAAW,GAAGA,CAAA,KAAMF,aAAa,CAAC,KAAK,CAAC;EAE9C,oBACEX,OAAA,CAACC,YAAY,CAACa,QAAQ;IAACC,KAAK,EAAE;MAAEL,UAAU;MAAEE,UAAU;MAAEC;IAAY,CAAE;IAAAL,QAAA,EACnEA;EAAQ;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAACV,GAAA,CAXWF,aAAgD;AAAAa,EAAA,GAAhDb,aAAgD;AAAA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}