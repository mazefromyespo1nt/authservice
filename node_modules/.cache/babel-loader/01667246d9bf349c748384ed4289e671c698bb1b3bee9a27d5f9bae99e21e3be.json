{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\emman\\\\OneDrive\\\\Documents\\\\reacttsx\\\\React-TS-login-using-jwt\\\\src\\\\context\\\\dashtabla\\\\userDeleteContext.tsx\";\n// userDeleteContext.tsx\nimport React, { createContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserDeleteContext = /*#__PURE__*/createContext(null);\nexport const UserDeleteProvider = ({\n  children\n}) => {\n  const eliminarUsuarios = async selectedRows => {\n    try {\n      const response = await fetch('http://localhost:8088/api/usuarios/status/false', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          usuarios: selectedRows\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Error al eliminar usuarios');\n      }\n\n      // Manejar la respuesta aquí si es necesario\n    } catch (error) {\n      console.error('Error al eliminar usuarios:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(UserDeleteContext.Provider, {\n    value: {\n      eliminarUsuarios\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_c = UserDeleteProvider;\nvar _c;\n$RefreshReg$(_c, \"UserDeleteProvider\");","map":{"version":3,"names":["React","createContext","jsxDEV","_jsxDEV","UserDeleteContext","UserDeleteProvider","children","eliminarUsuarios","selectedRows","response","fetch","method","headers","body","JSON","stringify","usuarios","ok","Error","error","console","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/emman/OneDrive/Documents/reacttsx/React-TS-login-using-jwt/src/context/dashtabla/userDeleteContext.tsx"],"sourcesContent":["// userDeleteContext.tsx\r\nimport React, { createContext, FC, ReactNode } from 'react';\r\n\r\ninterface UserDeleteContextType {\r\n  eliminarUsuarios: (idUsuarios: number[]) => Promise<void>;\r\n}\r\n\r\nexport const UserDeleteContext = createContext<UserDeleteContextType | null>(null);\r\n\r\ninterface Props {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const UserDeleteProvider: FC<Props> = ({ children }) => {\r\n  const eliminarUsuarios = async (selectedRows: any[]) => {\r\n    try {\r\n      const response = await fetch('http://localhost:8088/api/usuarios/status/false', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ usuarios: selectedRows }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Error al eliminar usuarios');\r\n      }\r\n\r\n      // Manejar la respuesta aquí si es necesario\r\n    } catch (error) {\r\n      console.error('Error al eliminar usuarios:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <UserDeleteContext.Provider value={{ eliminarUsuarios }}>\r\n      {children}\r\n    </UserDeleteContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,QAAuB,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAM5D,OAAO,MAAMC,iBAAiB,gBAAGH,aAAa,CAA+B,IAAI,CAAC;AAMlF,OAAO,MAAMI,kBAA6B,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAC7D,MAAMC,gBAAgB,GAAG,MAAOC,YAAmB,IAAK;IACtD,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iDAAiD,EAAE;QAC9EC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEC,QAAQ,EAAER;QAAa,CAAC;MACjD,CAAC,CAAC;MAEF,IAAI,CAACC,QAAQ,CAACQ,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;MAC/C;;MAEA;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACrD;EACF,CAAC;EAED,oBACEhB,OAAA,CAACC,iBAAiB,CAACiB,QAAQ;IAACC,KAAK,EAAE;MAAEf;IAAiB,CAAE;IAAAD,QAAA,EACrDA;EAAQ;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACiB,CAAC;AAEjC,CAAC;AAACC,EAAA,GA1BWtB,kBAA6B;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}