{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\emman\\\\OneDrive\\\\Documents\\\\reacttsx\\\\React-TS-login-using-jwt\\\\src\\\\context\\\\dashtabla\\\\userDeleteContext.tsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserDeleteContext = /*#__PURE__*/createContext(undefined);\nexport const useUserDelete = () => {\n  _s();\n  const context = useContext(UserDeleteContext);\n  if (!context) {\n    throw new Error('useUserDelete debe ser usado dentro de un UserDeleteContextProvider');\n  }\n  return context;\n};\n_s(useUserDelete, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const UserDeleteProvider = ({\n  children\n}) => {\n  const eliminarUsuarios = async idsUsuarios => {\n    try {\n      const requestBody = {\n        idsUsuarios: idsUsuarios\n      };\n      const response = await fetch('http://localhost:8088/api/usuarios/status/false', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(idsUsuarios)\n      });\n      if (!response.ok) {\n        throw new Error('Error al cambiar el estado de los usuarios');\n      }\n\n      // Manejar la respuesta del servidor si es necesario\n    } catch (error) {\n      console.error('Error al cambiar el estado de los usuarios:', error);\n      throw error;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(UserDeleteContext.Provider, {\n    value: {\n      eliminarUsuarios\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_c = UserDeleteProvider;\nvar _c;\n$RefreshReg$(_c, \"UserDeleteProvider\");","map":{"version":3,"names":["React","createContext","useContext","jsxDEV","_jsxDEV","UserDeleteContext","undefined","useUserDelete","_s","context","Error","UserDeleteProvider","children","eliminarUsuarios","idsUsuarios","requestBody","response","fetch","method","headers","body","JSON","stringify","ok","error","console","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/emman/OneDrive/Documents/reacttsx/React-TS-login-using-jwt/src/context/dashtabla/userDeleteContext.tsx"],"sourcesContent":["import React, { createContext, useContext } from 'react';\r\n\r\nexport interface UserDeleteContextType {\r\n  eliminarUsuarios: (idsUsuarios: number[]) => Promise<void>;\r\n}\r\n\r\nexport const UserDeleteContext = createContext<UserDeleteContextType | undefined>(undefined);\r\n\r\nexport const useUserDelete = () => {\r\n  const context = useContext(UserDeleteContext);\r\n  if (!context) {\r\n    throw new Error('useUserDelete debe ser usado dentro de un UserDeleteContextProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const UserDeleteProvider: React.FC = ({ children }) => {\r\n  const eliminarUsuarios = async (idsUsuarios: number[]) => {\r\n    try {\r\n      const requestBody = {\r\n        idsUsuarios: idsUsuarios\r\n      };\r\n\r\n      const response = await fetch('http://localhost:8088/api/usuarios/status/false', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(idsUsuarios),\r\n      });\r\n      \r\n\r\n      if (!response.ok) {\r\n        throw new Error('Error al cambiar el estado de los usuarios');\r\n      }\r\n\r\n      // Manejar la respuesta del servidor si es necesario\r\n\r\n    } catch (error) {\r\n      console.error('Error al cambiar el estado de los usuarios:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <UserDeleteContext.Provider value={{ eliminarUsuarios }}>\r\n      {children}\r\n    </UserDeleteContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAMzD,OAAO,MAAMC,iBAAiB,gBAAGJ,aAAa,CAAoCK,SAAS,CAAC;AAE5F,OAAO,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjC,MAAMC,OAAO,GAAGP,UAAU,CAACG,iBAAiB,CAAC;EAC7C,IAAI,CAACI,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,qEAAqE,CAAC;EACxF;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,aAAa;AAQ1B,OAAO,MAAMI,kBAA4B,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAC5D,MAAMC,gBAAgB,GAAG,MAAOC,WAAqB,IAAK;IACxD,IAAI;MACF,MAAMC,WAAW,GAAG;QAClBD,WAAW,EAAEA;MACf,CAAC;MAED,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,iDAAiD,EAAE;QAC9EC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACR,WAAW;MAClC,CAAC,CAAC;MAGF,IAAI,CAACE,QAAQ,CAACO,EAAE,EAAE;QAChB,MAAM,IAAIb,KAAK,CAAC,4CAA4C,CAAC;MAC/D;;MAEA;IAEF,CAAC,CAAC,OAAOc,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,6CAA6C,EAAEA,KAAK,CAAC;MACnE,MAAMA,KAAK;IACb;EACF,CAAC;EAED,oBACEpB,OAAA,CAACC,iBAAiB,CAACqB,QAAQ;IAACC,KAAK,EAAE;MAAEd;IAAiB,CAAE;IAAAD,QAAA,EACrDA;EAAQ;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACiB,CAAC;AAEjC,CAAC;AAACC,EAAA,GAjCWrB,kBAA4B;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}