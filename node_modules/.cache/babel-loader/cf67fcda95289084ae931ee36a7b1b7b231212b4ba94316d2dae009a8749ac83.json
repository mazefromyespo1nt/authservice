{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\emman\\\\OneDrive\\\\Documents\\\\reacttsx\\\\React-TS-login-using-jwt\\\\src\\\\context\\\\RegisterContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useContext } from \"react\";\nimport { createContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const RegisterContext = /*#__PURE__*/createContext(undefined);\nexport const RegisterProvider = ({\n  children\n}) => {\n  _s();\n  const [registerComponente, setRegisterComponente] = useState(false);\n  return /*#__PURE__*/_jsxDEV(RegisterContext.Provider, {\n    value: {\n      registerComponente,\n      setRegisterComponente\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n_s(RegisterProvider, \"JK1O30MYkFhsFh0pq6OLBTyYg0w=\");\n_c = RegisterProvider;\nexport const useRegisterContext = () => {\n  _s2();\n  const context = useContext(RegisterContext);\n  if (!context) {\n    throw new Error(\"useRegisterContext debe ser utilizado dentro de un proveedor RegisterProvider\");\n  }\n  return context;\n};\n_s2(useRegisterContext, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"RegisterProvider\");","map":{"version":3,"names":["React","useState","useContext","createContext","jsxDEV","_jsxDEV","RegisterContext","undefined","RegisterProvider","children","_s","registerComponente","setRegisterComponente","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useRegisterContext","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/emman/OneDrive/Documents/reacttsx/React-TS-login-using-jwt/src/context/RegisterContext.tsx"],"sourcesContent":["import React, { useState, useContext } from \"react\";\r\nimport { createContext } from \"react\";\r\n\r\ninterface RegisterContextType {\r\n    registerComponente: boolean;\r\n    setRegisterComponente: React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n\r\n\r\nexport const RegisterContext = createContext<RegisterContextType | undefined>(undefined);\r\n\r\n\r\nexport const RegisterProvider: React.FC = ({ children }) => {\r\n    const [registerComponente, setRegisterComponente] = useState(false);\r\n\r\n    return (\r\n        <RegisterContext.Provider value={{ registerComponente, setRegisterComponente }}>\r\n            {children}\r\n        </RegisterContext.Provider>\r\n    );\r\n};\r\n\r\n\r\nexport const useRegisterContext = () => {\r\n    const context = useContext(RegisterContext);\r\n    if (!context) {\r\n        throw new Error(\"useRegisterContext debe ser utilizado dentro de un proveedor RegisterProvider\");\r\n    }\r\n    return context;\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AACnD,SAASC,aAAa,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQtC,OAAO,MAAMC,eAAe,gBAAGH,aAAa,CAAkCI,SAAS,CAAC;AAGxF,OAAO,MAAMC,gBAA0B,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACxD,MAAM,CAACC,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAEnE,oBACII,OAAA,CAACC,eAAe,CAACO,QAAQ;IAACC,KAAK,EAAE;MAAEH,kBAAkB;MAAEC;IAAsB,CAAE;IAAAH,QAAA,EAC1EA;EAAQ;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACa,CAAC;AAEnC,CAAC;AAACR,EAAA,CARWF,gBAA0B;AAAAW,EAAA,GAA1BX,gBAA0B;AAWvC,OAAO,MAAMY,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,GAAA;EACpC,MAAMC,OAAO,GAAGpB,UAAU,CAACI,eAAe,CAAC;EAC3C,IAAI,CAACgB,OAAO,EAAE;IACV,MAAM,IAAIC,KAAK,CAAC,+EAA+E,CAAC;EACpG;EACA,OAAOD,OAAO;AAClB,CAAC;AAACD,GAAA,CANWD,kBAAkB;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}